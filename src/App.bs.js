// Generated by BUCKLESCRIPT VERSION 5.0.1, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Speech = require("./Speech.bs.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var View$BsReactNative = require("bs-react-native/src/components/view.js");
var ReactNativeVoice = require("react-native-voice");
var Button$BsReactNative = require("bs-react-native/src/components/button.js");

function App(Props) {
  var match = React.useState((function () {
          return false;
        }));
  var setSpeechInProgress = match[1];
  var match$1 = React.useState((function () {
          return /* array */[];
        }));
  var setSpeech = match$1[1];
  React.useEffect((function () {
          ReactNativeVoice.default.onSpeechStart = (function (param) {
              console.log("Speech Started");
              return /* () */0;
            });
          ReactNativeVoice.default.onSpeechRecognized = (function (param) {
              console.log("Speech Recognized");
              return /* () */0;
            });
          ReactNativeVoice.default.onSpeechResults = (function (e) {
              return Curry._1(setSpeech, (function (param) {
                            return e.value;
                          }));
            });
          ReactNativeVoice.default.onSpeechError = (function (err) {
              console.log("Speech ERROR " + JSON.stringify(err.error));
              return /* () */0;
            });
          return undefined;
        }));
  return ReasonReact.element(undefined, undefined, View$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* array */[
                  Speech.make(match$1[0]),
                  match[0] ? ReasonReact.element(undefined, undefined, Button$BsReactNative.make(undefined, undefined, undefined, (function (param) {
                                  Curry._1(setSpeechInProgress, (function (param) {
                                          return false;
                                        }));
                                  ReactNativeVoice.default.stop();
                                  return /* () */0;
                                }), undefined, "Stop voice recognition")(/* array */[])) : ReasonReact.element(undefined, undefined, Button$BsReactNative.make(undefined, undefined, undefined, (function (param) {
                                  Curry._1(setSpeechInProgress, (function (param) {
                                          return true;
                                        }));
                                  ReactNativeVoice.default.start("en-US");
                                  return /* () */0;
                                }), undefined, "Start voice recognition")(/* array */[]))
                ]));
}

var make = App;

exports.make = make;
/* react Not a pure module */
